// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDRequest struct {
	AnnotationID      string  `pathParam:"style=simple,explode=false,name=AnnotationID"`
	AnnotationLayerID string  `pathParam:"style=simple,explode=false,name=AnnotationLayerID"`
	Referer           *string `header:"style=simple,explode=false,name=Referer"`
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDRequest) GetAnnotationID() string {
	if o == nil {
		return ""
	}
	return o.AnnotationID
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDRequest) GetAnnotationLayerID() string {
	if o == nil {
		return ""
	}
	return o.AnnotationLayerID
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDRequest) GetReferer() *string {
	if o == nil {
		return nil
	}
	return o.Referer
}

type DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteAPIV1AnnotationLayerAnnotationLayerIDAnnotationAnnotationIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
